@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@model wine_app.Domain.Result<wine_app.Models.Region.RegionViewModel>
@{
    var model = Model.Data;
    ViewData["Title"] = "Region";
    var isoCode = Model.Data.IsoCode;
}
<head>
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />
    <script src="~/js/map-box.js"></script>
</head>

<div class="form-horizontal">
    <h4>Region</h4>
    <hr />

    @if (@Model.IsSuccess)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="alert alert-success">
                    <strong>Save successful</strong>
                </div>
            </div>
        </div>
    }

    <h6 class="col-md-10">Region Name:</h6>
    <p class="col-md-10">@Model.Data.Name</p>

    <h6 class="col-md-10">Country:</h6>
    <p class="col-md-10">@Model.Data.Country</p>

    @if (!string.IsNullOrWhiteSpace(Model.Data.Note))
    {
        <h6 class="col-md-10">Note:</h6>
        <p class="col-md-10">@Model.Data.Note</p>
    }

    <h6 class="col-md-10">Location:</h6>
    <div id="map" style="width: 100%; height: 400px;"></div>
    <hr />

    <div>
        <a class="btn btn-primary" asp-controller="Region" asp-action="Edit" asp-route-id="@Model.Data.Id">Edit</a>
        <a class="btn btn-secondary" asp-controller="Region" asp-action="List">Back to list</a>
    </div>
</div>

<script>
     renderMap(
        @Html.Raw("'" + Configuration.GetSection("MapBoxApiKey").Value + "'"),
        @Model.Data.Coordinates.First(),
        @Model.Data.Coordinates.Skip(1).First(),
        4,
        @*@Html.Raw("'"+isoCode+"'"),*@
         'FR-94',
        'region-boundaries',
        'mapbox.mapbox-streets-v8',
        "region"
    );
</script>
