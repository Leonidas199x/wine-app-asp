@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@model wine_app.Domain.Result<wine_app.Models.Country.CountryViewModel>
@{
    var model = Model.Data;
    ViewData["Title"] = "Country";
    var isoCode = Model.Data.IsoCode;
}
<head>
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />
</head>

<div class="form-horizontal">
    <h4>Country</h4>
    <hr />

    @if (@Model.IsSuccess)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="alert alert-success">
                    <strong>Save successful</strong>
                </div>
            </div>
        </div>
    }

    <h6 class="col-md-10">Country:</h6>
    <p class="col-md-10">@Model.Data.Name</p>
    <h6 class="col-md-10">ISO Code:</h6>
    <p class="col-md-10">@Model.Data.IsoCode</p>

    @if (!string.IsNullOrWhiteSpace(Model.Data.Note))
    {
        <h6 class="col-md-10">Note:</h6>
        <p class="col-md-10">@Model.Data.Note</p>
    }

    <h6 class="col-md-10">Location:</h6>
    <div id="map" style="width: 100%; height: 400px;"></div>
    <hr />

    <div>
        <a class="btn btn-primary" asp-controller="Country" asp-action="Edit" asp-route-id="@Model.Data.Id">Edit</a>
        <a class="btn btn-secondary" asp-controller="Country" asp-action="List">Back to list</a>
    </div>
</div>

<script>
        mapboxgl.accessToken = @Html.Raw("'" + Configuration.GetSection("MapBoxApiKey").Value + "'");

        var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
            center: [@Model.Data.Coordinates.First(), @Model.Data.Coordinates.Skip(1).First()],
        zoom: 3
    });

    map.on('load', function () {
        map.addLayer(
            {
        id: 'country-boundaries',
                source: {
            type: 'vector',
                    url: 'mapbox://mapbox.country-boundaries-v1',
                },
                'source-layer': 'country_boundaries',
                type: 'fill',
                paint: {
                'fill-color': '#d2361e',
                    'fill-opacity': 0.4,
                },
            },
            'country-label'
        );

        map.setFilter('country-boundaries', [
            "in",
            "iso_3166_1",
            @Html.Raw("'"+isoCode+"'")
        ]);
    });
</script>
